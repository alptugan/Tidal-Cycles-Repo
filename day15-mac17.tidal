d1 $ s "bd" 

cps 1
--- intro 1
d1 $ up "[12 0]/2" # sound "bass1" # gain "0"
d2 $ up "[4 4]/4" # sound "sax:2/4" # gain "0"
d3 $ sound "<sax:20/8  sax:21/8 sax:19/4 sax:18/2>" # gain "0"
d4 $ sound "d*2" # n (irand 10) #gain 0
d4 $ sound "{defdo:2,defdo:3/2,defdo:1/5,defdo:4/2, defdo:4}" #gain "0"
d5 $ sound "sine*2?" # n (irand 6) # gain "0"

hush

--- intro 2
d4 $ loopAt 4 $ up "[0 0 0 0]" #sound "bass1" #gain "0"
d3 $ sound "selffx" # gain "0" # pan rand # sustain 4
d5 $ every (irand 22) ((every 5 (striate (irand(128)))).(# n ((irand 3) + 2)).(fast (irand 12))) $ s "feelfx" # n (choose [4]) #  gain "0."
d2 $ slow 4.5 $ sound "defdo:2 defdo:1" # gain "0.0 0.0"

-- intro 3
d1 $ s "nau" # n (choose [0,1,3,5]) # sustain 5 # delay 0.4 # delayfeedback 1 # gain "0.8"
d2 $ every 4 (density (irand 80)) $ up "0 ~ 12 24 [48 72 36]" # sound "[jungbass:11]" # pan sine1 # speed "1" # gain "1" # lpf 100 # cut "2"

-- intro 4
solo $
cps 0.25
cps 0.9

d1
$stack[
  s "supersaw(7,16,13)" #n "{0, 7, 10, 17, 19}" #speed "1.5" #pan (rand),
  s "supersaw(7,16,11)" #n "{0, 7, 10, 17, 13}" #speed "1.0" #pan (rand),
  s "supersaw(3,16,7)" #n "{0, 7, 10, 17, 19}" #speed "0.75" #pan (rand),
  s "supersaw(3,16,5)" #n "{0, 7, 10, 17, 17}" #speed "0.5" #pan (rand),
  s "supersaw(3,16,3)" #n "{0, 7, 10, 17, 19}" #speed "0.25" #pan (rand)
]
|+| n "0 7 -7 0 0 -5 3"
# cutoff (scale 800 8000 $slow 16 $sine1) 
#resonance "0.1"
-- #resonance rand --2
#sustain "0.1" -- 1
#gain "0.6"
#shape "0.6"

d5
$jux (iter 16)
$s "supersaw(7, 16, {3, 4})" # n "{c7, e7, f7, g7, a7, d8}"
-- |+| up "5 0 -5 0 -12 12 7 0 -7 0"
#sustain "0.05"
#cutoff (scale 2000 15000 $slow 5 $sine1) #resonance "0.3"
#gain "0.5"
#shape "0.5"


-- intro 5
-- RHYTM
bps (60/120)
cps(0.25)

d1
$ sound (samples "cr*8" (irand 9))
|+| gain (scale 0.5 0.8 $ rand)

p1 $s "n"

d3
$ jux (iter 4)
-- $ every 3 (gap 4)
-- $ every 4 (chop 4)
$ stack[
  up pat1 |=| sound (samples "akuma2" (irand 8)) # speed (scale 1.0 1.5 $ rand) # gain 0.5
]
-- |+| cutoff (scale 500 8000 $ slow 4 $ sine1) # resonance (scale 0.1 0.3 $ rand)
-- |+| delay "0.5" # delaytime "0.375" # delayfeedback "0.75"

cps 0.25

d2
$ jux (iter 4)
$ every 4 (gap 4)
$ every 5 (chop 4)
$ stack[
  up pat6 |=| sound "drum:4" # speed (scale 1.0 5.0 $ rand),
  up pat4 |=| sound "drum:6" # speed (scale 1.0 5.0 $ rand),
  up pat5 |=| sound "drum:2" # speed (scale 1.0 8.0 $ rand)
]
|=| cutoff (scale 1000 12000 $ slow 3 $ sine1) # resonance (scale 0.1 0.4 $ rand)
|=| delay "0.2" # delaytime "0.375" # delayfeedback "0.8"



d3
$ jux (iter 8)
$ stack[
 up pat5 |=| sound "dr_few:3",
 up pat6 |=| sound "dr_few:0",
 up pat4 |=| sound "dr_few:6"
]
|+| delay "0.25" |+| delaytime "0.375" |+| delayfeedback "0.5"
|=| gain "0.7"


d4
$ jux (iter 32)
$ every 3 (chop 8)
$ stack[
 up pat5 |=| sound "akuma1:1" |=| speed "0.5 0.25 1.0 -1.0",
 up pat2 |=| sound "akuma1:0" |=| speed "1.0 0.5 0.25 1.0 -1.0",
 up pat3 |=| sound "akuma1:3" |=| speed "1.0 -0.5 0.25 1.0 -1.0 1.0 1.5",
 up pat4 |=| sound "akuma1:2" |=| speed "0.5 0.25 -1.5 1.0 -0.75 1.0 -0.25"
]
|*| speed "1.0" |*| speed "1.25"
|+| delay "0.5" # delaytime "1.375" # delayfeedback "0.8"
|+| cutoff (scale 100 8000 $ slow 1 $ sine1) # resonance (scale 0.1 0.8 $ slow 8 $ sine1)
|=| gain "0.5"

hush

d5
$ jux rev
$ n "[c2 [[~ b2] g2] b1 [d2 g2]] ~" # s "supersaw" # pan (rand)
|+| sustain "0.25"
|+| resonance "0.2" # lfo "6"
|+| cutoff (scale 800 1000 $ slow 4 $ sine1) # resonance (scale 0.01 0.2 $ slow 4 $ sine1)
|+| delay "0.5" # delaytime "0.375" # delayfeedback "0.9"
|+| gain "0.7"





hush

let pat1 = "{0*2 ~ [0 ~] ~ 0*4 [~ 0] 0}%4"

let pat2 = "{[~ 0] 0 ~ 0 [~ 0] ~ 0}%4"

let pat3 = "{0 0*4 [~ 0] [~ 0] 0*2  0 ~ 0*4 ~ 0 -12 0 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"

let pat4 = "{0 0*2 [~ 0] [~ 0] 0 0 -12 0*4 ~ 0 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"

let pat5 = "{[~ 0] 0 0 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0 -12 0*4 ~ [~ 0] [~ 0] ~ 0*2 -12}%4"

let pat6 = "{~ 0 ~ 0 -12 0*4 0 0*2 [~ 0] -12 0*4 ~ 0 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0*2 -12}%4"

-- INTRO 5


cps 0.25

d4
$ stack[
  s "sine(5,16)" # n "{c5, e5, f5, g5, a5}"
]
#cutoff (scale 800 15000 $slow 4 $sine1) #resonance "0.2"
#sustain "0.08"
#gain "0.4"

-- INTRO 6
-- 01
d1
$s "akuma2(3, 16)"
#gain "0.7"
 #cutoff (scale 800 8000 $rand) #resonance "0.3"
 #delay "0.8" #delaytime "0.01 0.02 0.03 0.005" #delayfeedback "0.8"

d2
$s "akuma3(3,16,5)"
#sustain "1.0"
#gain "0.7"

d3
$s "akuma4(3,16,9)"
#sustain "1.0"
#gain "0.7"


hush

cps(0.25)

-- 02

d4
$stack[
  s "sine(5,16)" # n "{c5, e5, f5, g5, a5}"
]
#cutoff (scale 800 15000 $slow 4 $sine1) #resonance "0.2"
#sustain "0.08"
#gain "0.6"

hush


-- 03
hush

d5
$slow 2
$sound "ifdrums*2 ~ ~ ~ ~ ~ ~ ~"
#n "[0 2] 0 0 0 0 0 0 0"
#gain "0.8"

d6
$jux (iter 16)
$every 2 (#gain "0")
$stack [
  s "auto(3, 16, 5)",
  s "drum(2, 16, 2)",
  ---s "psr(4,16)",
  s "glitch(2, 16)"
]
#n (irand 64)
#gain "0.9"
#pan (rand)

hush
-- 04

d6
$jux (iter 8)
$sound "{ifdrums(3, 16, 3), drum(3, 16, 2), glitch(3, 16)}"
#gain "0.8"
#n (irand 64)
#pan (rand)

d6
$jux (iter 8)
$sound "{ifdrums(5, 16, 3), chin:6(5, 16, 2), glitch(11, 16, 2)}"
#gain "0.8"
#n (irand 64)
#pan (rand)

hush

d6
$jux (iter 8)
$ stack [
 s "ifdrums(2, 16, 1)",
 s "bd(3, 16, 0)",
 s "glitch(3, 16, 2)",
 s "bass(2, 16, 3)",
 s "dr55(2,16,5)}"
]
#pan (rand)
#n (irand 64)
#gain "0.7"
#shape "0.5"


cps 0.25

d6
$jux (iter 4)
$jux (iter 8)
$ stack[
  -- sound "arpy(3,16,3)",
  -- sound "felld(5,16,0)",
  -- sound "fell2(5,16,8)"|+|up "-7 0 7 14",
  --sound "procshort(3,16,4)",
  --sound "procshort(2,15,3)",
  sound "bass(3,16,2)",
  sound "space(3,16,10)",
  sound "glitch(3,16,5)",
  --sound "808bd(3,16,9)"
  sound "click(3,16,3)",
  sound "sine(3,16,3)"
]
#n (irand 128)
#gain "0.6"
#shape "0.3"
#pan (rand)
#up "{7 0 -7 0 5 -12 0 12 0 7 0 -7 0 12}%16"
-- #cutoff (scale 800 15000 $slow 3 $rand) #resonance "0.3"
--- pad pad:1


-- INTRO 7
cps(0.9)
d1 $ s "drum*8" # n (irand 8) # gain "1"
d2 $ every 4 ((# gain "0").(stut 2 8 20).(every 8 (striate 32))) $ s "fall2" # gain 0 
d3 $ slow 4 $ every 4 (const $ up "12*14 ~ 12*14 ~" # s "bass1") $ up "4*4 ~ 8*8 ~" # s "bass1" # sustain "0.25" 
d4 $ s "chin*3 chink*2? click*2 casio?" # n (irand 12) # pan (slow 5 sine) # gain "1"
d5 $ s "cosmicg*8?" # n (irand 13) # gain "0.7"
d6 $ sometimesBy 0.25 (# gain 1) $ s "dark/8" # n "2" # sustain "10" # gain 0

-- INTRO 8
d3 $
stack [
sound "[[bd*3] [bd sn:1]]/2" # gain 0.90  |+| cutoff "0.1",
sound "beacch*2" # accelerate (rand) # gain "1.4" # shape "-0.3",
sound "ade/4*2" # n 2 # up "[0 2]",
up "0 ~ 1 ~" # s "bass1",
slow 8 $ sound "sine*4" # gain 0.8
] |+| resonance "14"

-- INTRO 9
cps 0.5
d1 $ sound "auto*8" # n (run 32)
d1 $ sound "auto*8" # n (irand 32) #pan rand # gain "0.9"
d1 $ every 4 (striate irand(64)) $ sound "auto*8" # n (irand 32) #pan rand # gain "0.9"

d2 $ up "[0 2 4 5]/4" # sound "bass1" # gain "0.9"
d3 $ every 4 (0.25 <~) $ shuffle 8 $ sound "defdo*8" # n (irand 8) # gain 0.75

-- INTRO 10
cps 0.5
d1 $
stack [
  sound (samples "bass1:0*4?" (run 10)) # gain 0.9 # cut "1",
  sound "ifdrums:10" # gain "1",
  slowcat [
  -- sound (samples "minperc*16?" (irand 50)) # accelerate "-1",
  sound (samples "glitch*8" (every 2 (density 1.2) $ density 1.21 $ run 150)) # pan "[0 1]"
  -- sound (samples "print*8?" (irand 13)) # pan "[0 1]*4" # gain "0.95"
  ]  -- |+| unit "c" |+| speed "2"
]

-- break beat
d1 $ every 8 ( # speed (rand + 0.1)) $ sound "akuma3*6" # n ((irand 10) + 13)
d1 $ s "akuma1*6" # n (choose [4,5,1,2,3,6,7,8,9,10])
d1 $ n (run "<4 8 4 6>") # sound "amencutup"

-- Speed up sometimes or every some scale
d1 $ someCyclesBy 0.25 (fast 2) $ sound "akuma1*6" # n (irand 15)
d1 $ every 4 (fast 2) $ sound "akuma1*6" # n (irand 15)

---

d1 $ jux (iter 4) $ sound "cosmicg:3 chin:8*2"
  |+| speed (slow 4 $ scale 1 1.5 sine)


  d2 $ stack [
    sometimesBy 0.5 (# gain "0") $ sound "sax" # gain 1,
    sometimesBy 0.9 (# gain "1") $ sound "sax:9" # gain 0,
    sometimesBy 0.4 (# gain "1") $  sound "sax:11" # gain 0,
    sometimesBy 0.15 (# gain "1") $ sound "sax:15" # gain 0 # sustain 1
  ]

d2 $ slowcat [
    up "{1,4,8}" # s "sax:2" # gain "1",
    up "{1,4,9}" # s "sax:2" # gain "1",
    up "{1,4,11}" # s "sax:2" # gain "1",
    up "{1,4,13}" # s "sax:2" # gain "1"
]


cps (1)

  d1 $ seqP [ 
    (0, 12, sound "bd bd*2"), 
    (4, 12, sound "hh*2 [sn cp] cp future*4"), 
    (8, 12, sound (samples "arpy*8" (run 16)))
  ]