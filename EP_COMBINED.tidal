-- AGGRESSIVE
cps(1.1)

d1 $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"
d1 $ every 8 (jux(rev).(every 2 (striate (irand 128)))).(every 2 (iter 4)) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"

d1 $ every 8 ((const $ s "dr_few:1 dr_few:1*2 dr_few:1 dr_few:1*8" # gain 1).jux(rev).(every 2 (striate (irand 128)))).(every 2 (iter 4)) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"

d1 $ every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(iter 4)) $ s "dr_few:3 dr_few:1*2 bit1:1 dr_few:1*8" # gain 1).jux(rev).(every 2 (striate (irand 128)))).(every 2 (iter 4)) $ sound "auto:3 ~ [auto:3 auto:2] ~" # gain "0"

d2 $ every 8 (every 2 (striate (irand 256))) $ sound "auto:6*8" # gain 0
d3 $ every 2 (#gain "0") $ sound "auto:8*30" # gain "0"

d4 $ every 16 ((loopAt "0.1").(# pan "[0 1]")) $ sound "bit1*8?" # n (irand 55) # pan "[0 1]" # gain 1
d5 $ every 4 (jux(rev)) $ sound "jungbass:5/8" # gain "0"



cps(-1)
cps(1.1)

d1 $ spaceOut ([1,0.97..0.4]) $ s "auto:3*4" # gain "1"

d2 $ seqP [
    (0, 8, sound "auto:6*8" # gain 1),
    (0, 8, every 2 (#gain "0") $ sound "auto:8*30" # gain "0.9"),
    (8, 9, sound "jungbass:5" # gain "1")
] # gain 0
d2 silence 



d1 $ seqP [
    (0, 20, every 8 ((const $ s "dr_few:1 dr_few:1*2 dr_few:1 dr_few:1*8" # gain 1).jux(rev).(every 2 (striate (irand 128)))).(every 2 (iter 4)) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    -- Set 4
    (20,40, every 2 (2 ~>).(every 3 (jux(rev))) $ every 2 (striate (irand 256)) $ s "bit1:4*8 bit1:4 dr_few:1*2 bit1:1 dr_few:1*8?" # gain 1 )
]


(0, 1, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (1, 16, every 4 (0.25 ~>) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (16, 17, sound "auto:8*30" # gain "1" ),
    (17, 24, every 2 (#gain "0") $ sound "auto:8*30" # gain "1" ),
    (16, 23, sound "auto:6*8" # gain 1),
    (23, 24, every 8 (striate (irand 256)) $ sound "auto:6*8" # gain 1)



cps(-1)
cps(1.1)

d1 $ every 8 (# gain "0") $ every 16 ((loopAt "0.1").(# pan "[0 1]")) $ sound "bit1*8" # n (irand 55) # pan "[0 1]" # gain 0.9 # cut "1.1"

let p1 = 0
let p2 = 2 --17
let p3 = 3--18

d1 $ fast 8 $ spaceOut ([1,0.97..0.0]) $ s "auto:3*4" # gain "1"

d1 $ every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((striate' (irand 64) (1/4)).(# 
speed ((rand)))) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"

d1 $ every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"


d1 $ fast 12 $ spaceOut ([1,0.99..0.0]) $ s "auto:3*8" # gain "0.65"
d1 $ every 4 (stut 4 0.1 (-0.5)) $ s "jungbass:16 ~ [jungbass:16 jungbass:16] ~" # gain "1"

d1 $ seqP [
    (0, 7, s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (7, 16, every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((striate' (irand 64) (1/4)).(# speed ((rand)))) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (0, 1, sound "auto:8*30" # gain "1" ),
    (1, 16, every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    (15, 16, sound "jungbass:5" # gain "1")
]
d2 $ every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff (scale 100 3000 $slow 5 $sine1) #resonance "0.2"
d1 $ sound "jungbass:8/4" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)


d1 $ sound "jungbass:4*16" # gain "0.4" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3500 $ sine)
-- 2
-- 3 distorted

d1 $ seqP [
    (51 - 51, 75 - 51, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    (51 - 51, 75 - 51, every 8 (striate (irand 256).(# pan "[0 1]")) $ sound "auto:6*8" # gain 1),
    (51 - 51, 75 - 51, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (51 - 51, 59 - 51, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (59 - 51, 67 - 51, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
    (67 - 51, 69 - 51, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (69 - 51, 71 - 51, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (71 - 51, 75 - 51, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (75 - 51, 76 - 51, sound "jungbass:8" # gain "1" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    -- Idle verse
    (78 - 51, 78 + 99 - 51, sound "jungbass:4*16" # gain "0.4" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3500 $ sine)),
    (78 - 51, 78 + 4 - 51, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 300 #resonance "0.1"),
    (78 - 51 + 4, 78 - 51 + 8, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 500 #resonance "0.21"),
    (78 - 51 + 8, 78 - 51 + 12, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 700 #resonance "0.20"),
    (78 - 51 + 12, 78 - 51 + 16, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.5") $ sound "auto:8*30" # gain "1" #cutoff 900 #resonance "0.18"),
    (78 - 51 + 16, 78 - 51 + 20, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 1200 #resonance "0.09"),
    (78 - 51 + 20, 78 - 51 + 24, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.5") $ sound "auto:8*30" # gain "1" #cutoff 1500 #resonance "0")
]

cps(-1)
cps(1.1)

d1 $ seqP [
    (0, 99, sound "jungbass:3*16" # gain "0.4" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3500 $ sine)),
    (0, 4, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 300 #resonance "0.2"),
    (4, 8, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 500 #resonance "0.2"),
    (8, 12, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 700 #resonance "0.2"),
    (12, 16, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 900 #resonance "0.2"),
    (16, 20, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 1200 #resonance "0.2"),
    (20, 24, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.5") $ sound "auto:8*30" # gain "1" #cutoff 1500 #resonance "0.2"),
    -- Drums  i
    (20, 24, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.3"#cutoff 1200 # speed "0.2"),
    (24, 28, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 (# speed "-0.6") $ sound "auto:8*30" # gain "1" #cutoff 1800 #resonance "0.2"  # speed "0.1"),
    (24, 28, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.4"#cutoff 1800  # speed "0.3"),
    (28, 32, every 8 ((# speed "-0.1").(degrade).(jux(rev))) $ every 2 ((#gain "0.9").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 2200 #resonance "0.2"  # speed "0.2"),
    (28, 32, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.5"#cutoff 2200  # speed "0.4"),
    (32, 36, every 8 ((# speed "-0.2").(degrade).(jux(rev))) $ every 2 ((#gain "0.8").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 2500 #resonance "0.2"  # speed "0.3"),
    (32, 36, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.6"#cutoff 2500  # speed "0.5"),
    (36, 40, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((#gain "0.7").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 2800 #resonance "0.2"  # speed "0.4"),
    (36, 40, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.7"#cutoff 2800  # speed "0.6"),
    (40, 44, every 8 ((# speed "-0.4").(degrade).(jux(rev))) $ every 2 ((#gain "0.6").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 3200 #resonance "0.2"  # speed "0.5"),
    (40, 44, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.8"#cutoff 3200  # speed "0.7"),
    (44, 48, every 8 ((# speed "-0.5").(degrade).(jux(rev))) $ every 2 ((#gain "0.5").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 3500 #resonance "0.2"  # speed "0.6"),
    (44, 48, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.9"#cutoff 3500  # speed "0.8"),
    (48, 52, every 8 ((# speed "-0.6").(degrade).(jux(rev))) $ every 2 ((#gain "0.4").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 3800 #resonance "0.2"  # speed "0.7"),
    (48, 52, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" # cutoff 3800  # speed "0.9"),
    (52, 56, every 8 ((# speed "-0.7").(degrade).(jux(rev))) $ every 2 ((#gain "0.3").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 4100 #resonance "0.2"  # speed "0.8"),
    (52, 56, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4100  # speed "1"),
    (56, 60, every 8 ((# speed "-0.8").(degrade).(jux(rev))) $ every 2 ((#gain "0.2").(# speed "-0.7")) $ sound "auto:8*30" # gain "1" #cutoff 4500 #resonance "0.2"  # speed "0.9"),
    (56, 60, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4500 # speed "0.95"),
    (60, 69, every 2 ((#gain "0")) $ sound "auto:8*30" # gain "1"  # speed "0.95"),
    (60, 68, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (68, 69, sound "jungbass:5" # gain "1" # pan (slow 8 sine)),
    (70, 71, s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1"),
    -- Final Part - drums
    (70, 102, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    -- Glitch samples
    (70, 78, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (78, 86, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
    (86, 90, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90, 92, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (92, 102, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    -- distortion
    (70, 102, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    -- cymbal
    (70, 102, every 8 (striate (irand 256).(# pan "[0 1]")) $ sound "auto:6*8" # gain "1"),
    -- Subbass
    (102, 103, sound "jungbass:5" # gain "1" # pan (slow 8 sine))
]



cps(-1)
cps(1.1)
cps(0)

d1 $ seqP [
    (0, 0 + 99, every 8 (striate' 32 (1/2)) $ sound "jungbass:4*16" # gain "0.55" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (0, 0 + 4, every 8 ((# speed "-0.5").(degrade).(jux(rev))) $ every 2 (# speed "-0.5") $ sound "auto:8*30" # gain "1" #cutoff 300 #resonance "0.1"),
    (0 + 4, 0 + 8, every 8 ((# speed "-0.4").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 500 #resonance "0.13"),
    (0 + 8, 0 + 12, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 700 #resonance "0.15"),
    (0 + 12, 0 + 16, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 900 #resonance "0.17"),
    (0 + 16, 0 + 20, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 1200 #resonance "0.19"),
    (0 + 20, 0 + 24, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 1500 #resonance "0.2"),
    -- Drums  i
    (0 + 20, 0 + 24, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.3"#cutoff 1200 # speed "-0.12"),
    (0 + 24, 0 + 28, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 1800 #resonance "0.2"),
    (0 + 24, 0 + 28, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.4"#cutoff 1800  # speed "0.1"),
    (0 + 28, 0 + 32, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.38")) $ sound "auto:8*30" # gain "1" #cutoff 2200 #resonance "0.2"),
    (0 + 28, 0 + 32, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.5"#cutoff 2200  # speed "0.24"),
    (0 + 32, 0 + 36, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.34")) $ sound "auto:8*30" # gain "1" #cutoff 2500 #resonance "0.2"),
    (0 + 32, 0 + 36, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.6"#cutoff 2500  # speed "0.45"),
    (0 + 36, 0 + 40, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.25")) $ sound "auto:8*30" # gain "1" #cutoff 2800 #resonance "0.18"),
    (0 + 36, 0 + 40, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.7"#cutoff 2800  # speed "0.6"),
    (0 + 40, 0 + 44, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.31")) $ sound "auto:8*30" # gain "1" #cutoff 3200 #resonance "0.16"),
    (0 + 40, 0 + 44, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.8"#cutoff 3200  # speed "0.7"),
    (0 + 44, 0 + 48, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.33")) $ sound "auto:8*30" # gain "1" #cutoff 3500 #resonance "0.14"),
    (0 + 44, 0 + 48, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.9"#cutoff 3500  # speed "0.8"),
    (0 + 48, 0 + 52, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.2")) $ sound "auto:8*30" # gain "1" #cutoff 3800 #resonance "0.12"),
    (0 + 48, 0 + 52, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" # cutoff 3800  # speed "0.9"),
    (0 + 52, 0 + 56, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.23")) $ sound "auto:8*30" # gain "1" #cutoff 4100 #resonance "0.1"),
    (0 + 52, 0 + 56, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4100  # speed "0.95"),
    (0 + 56, 0 + 60, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.3")) $ sound "auto:8*30" # gain "1" #cutoff 4500 #resonance "0.05"),
    (0 + 56, 0 + 60, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4500 # speed "1"),
    (0 + 60, 0 + 69, every 2 ((#gain "0")) $ sound "auto:8*30" # gain "1"  # speed "1" #resonance "0"),
    (0 + 60, 0 + 68, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" #resonance "0"),
    (0 + 68, 0 + 69, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    (0 + 70, 0 + 71, s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1"),
    -- Final Part - drums
    (0 + 70, 0 + 102, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1")
]

d1 $ slow 8 $ chop 8 $ s "ade:4" # speed "0.5" # pan (scale 0.25 0.75 $ rand)

-- Intro gibi
d1 $ degradeBy 0.25 $ sometimesBy 0.5 ((#n (irand 5)).(#speed "-0.5")) $ s "vocad*4" # n (irand 5)

d2 $ degradeBy 0.95 $ sometimesBy 0.55 ((#n (irand 25)).(#speed "-0.5")) $ s "ul*8" # n (irand 35)


-- Intro gibi
d1 $ degradeBy 0.25 $ sometimesBy 0.5 ((#n (irand 5)).(#speed "-0.5")) $ s "vocad*4" # n (irand 5)

d2 $ degradeBy 0.95 $ sometimesBy 0.55 ((#n (irand 25)).(#speed "-0.5")) $ s "ul*8" # n (irand 35)

d1 $ every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((stut 2 0 (0.5)).(0.25 <~)) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"

cps(-1)
cps(1.1)
cps 0

d1 $ seqP [
    -- intro 1
    (0, 2, fast 8 $ spaceOut ([1,0.98..0.0]) $ s "auto:3*12" # gain "0.6" # sustain "1"),
    (2, 3, ((striate' (43) (1/2)).(# gain "0.75").(# speed (-0.05))) $ s "auto:4" # gain "1"),
    -- intro 2
    (2, 3, sound "jungbass:8" # gain "0.95" # speed 0.6 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (5, 7, fast 9 $ spaceOut ([1,0.98..0.0]) $ s "auto:3*12" # gain "0.61" # sustain "1"),
    (5, 7, ((striate' (irand 40) (1/2)).(# gain "0.75").(# speed (-0.04))) $ s "auto:4" # gain "1"),
    -- intro 3
    (7, 8, sound "jungbass:8" # gain "0.95" # speed 0.5 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (10, 12, fast 10 $ spaceOut ([1,0.98..0.0]) $ s "auto:3*12" # gain "0.62" # sustain "1"),
    (12, 13, ((striate' (irand 52) (1/2)).(#gain 0.75).(# speed (-0.05))) $ s "auto:4" # gain "1"),
    (12, 13, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (15, 19, fast 12 $ spaceOut ([1,0.99..0.0]) $ s "auto:3*12" # gain "0.64"),
    -- Part 2
    (18, 33, sound "auto:6*8" # gain "1" # hpf (slow 8 $ scale 1000 8500 $ sine)),
    (18, 25, s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (25, 26, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (25, 33, every 8 ((striate' (irand 22) (1/16)).(#gain 0.75).(# speed ((rand)))) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (18, 19, sound "auto:8*30" # gain "1" ),
    (19, 33, every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    (33, 34, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    -- Part 3
    (34, 41, s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (34, 50, sound "auto:6*8" # gain "1"),
    (41, 50, every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((stut 2 0 (0.5)).(0.25 <~)) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (34, 35, sound "auto:8*30" # gain "1" # lpf (scale 400 10000 $ sine)),
    (35, 50, every 2 (#gain "0") $ sound "auto:8*30" # gain "1" # lpf (scale 500 15000 $ sine)
    ),
    (49, 50, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    -- Part 4
    (51, 83, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    (51, 83, every 8 (striate (irand 256).(# pan "[0 1]")) $ sound "auto:6*8" # gain 1),
    (51, 83, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (51, 59, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (59, 67, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
    (67, 69, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (69, 71, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (71, 75, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (75, 79, sound "bit1*8" # n (4 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (79, 83, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.4"),
    (83, 84, sound "jungbass:8" # gain "0.95" # speed 0.75 # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    -- Idle verse
    (87, 87 + 68, sound "jungbass:4*16" # gain "0.5" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87, 87 + 4, every 8 ((# speed "-0.5").(degrade).(jux(rev))) $ every 2 (# speed "-0.5") $ sound "auto:8*30" # gain "1" #cutoff 300 #resonance "0.1"),
    (87 + 4, 87 + 8, every 8 ((# speed "-0.4").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 500 #resonance "0.13"),
    (87 + 8, 87 + 12, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 700 #resonance "0.15"),
    (87 + 12, 87 + 16, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 900 #resonance "0.17"),
    (87 + 16, 87 + 20, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 1200 #resonance "0.19"),
    (87 + 20, 87 + 24, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 1500 #resonance "0.2"),
    -- Drums  i
    (87 + 20, 87 + 24, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.3"#cutoff 1200 # speed "-0.12"),
    (87 + 24, 87 + 28, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 1800 #resonance "0.2"),
    (87 + 24, 87 + 28, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.4"#cutoff 1800  # speed "0.1"),
    (87 + 28, 87 + 32, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.38")) $ sound "auto:8*30" # gain "1" #cutoff 2200 #resonance "0.2"),
    (87 + 28, 87 + 32, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.5"#cutoff 2200  # speed "0.24"),
    (87 + 32, 87 + 36, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.34")) $ sound "auto:8*30" # gain "1" #cutoff 2500 #resonance "0.2"),
    (87 + 32, 87 + 36, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.6"#cutoff 2500  # speed "0.45"),
    (87 + 36, 87 + 40, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.25")) $ sound "auto:8*30" # gain "1" #cutoff 2800 #resonance "0.18"),
    (87 + 36, 87 + 40, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.7"#cutoff 2800  # speed "0.6"),
    (87 + 40, 87 + 44, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.31")) $ sound "auto:8*30" # gain "1" #cutoff 3200 #resonance "0.16"),
    (87 + 40, 87 + 44, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.8"#cutoff 3200  # speed "0.7"),
    (87 + 44, 87 + 48, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.33")) $ sound "auto:8*30" # gain "1" #cutoff 3500 #resonance "0.14"),
    (87 + 44, 87 + 48, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.9"#cutoff 3500  # speed "0.8"),
    (87 + 48, 87 + 52, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.2")) $ sound "auto:8*30" # gain "1" #cutoff 3800 #resonance "0.12"),
    (87 + 48, 87 + 52, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" # cutoff 3800  # speed "0.9"),
    (87 + 52, 87 + 56, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.23")) $ sound "auto:8*30" # gain "1" #cutoff 4100 #resonance "0.1"),
    (87 + 52, 87 + 56, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4100  # speed "0.95"),
    (87 + 56, 87 + 60, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.3")) $ sound "auto:8*30" # gain "1" #cutoff 4500 #resonance "0.05"),
    (87 + 56, 87 + 60, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4500 # speed "1"),
    (87 + 60, 87 + 72, every 2 ((#gain "0")) $ sound "auto:8*30" # gain "1"  # speed "1" #resonance "0"),
    (87 + 60, 87 + 72, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" #resonance "0"),
    (87 + 68, 87 + 72, every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((stut 2 0 (0.5)).(0.25 <~)) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" #resonance "0"),
    (87 + 72, 87 + 73, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    (87 + 73, 87 + 74, s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1"),
    -- Fade out bg texture melody
    (87 + 68, 87 + 69, sound "jungbass:4*16" # gain "0.48" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 69, 87 + 70, sound "jungbass:4*16" # gain "0.46" # pan (slow 1 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 70, 87 + 71, sound "jungbass:4*16" # gain "0.35" # pan (slow 5 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 71, 87 + 72, sound "jungbass:4*16" # gain "0.25" # pan (slow 2 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 72, 87 + 73, sound "jungbass:4*16" # gain "0.1" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 73, 87 + 74, sound "jungbass:4*16" # gain "0.01" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    -- Final Part - drums
    (90 + 70, 90 + 102, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    -- Glitch samples
    (90 + 70, 90 + 78, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90 + 78, 90 + 86, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
    (90 + 86, 90 + 90, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90 + 90, 90 + 92, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90 + 92, 90 + 102, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    -- distortion
    (90 + 70, 90 + 102, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    -- cymbal
    (90 + 70, 90 + 102, every 8 (striate (irand 256).(# pan "[0 0.5 1]")) $ sound "auto:6*8" # gain "1"),
    -- Subbass
    (90 + 102,90 + 103, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    (90 + 102,90 + 103, sound "bit1*16" # n (1 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1"),
    (90 + 103,90 + 106, sound "bit1*32" # n (irand 15) # pan (slow 8 sine) # gain "1" # cut "1.1"),
    (90 + 106,90 + 114, sound "bit1*64" # n (5 + (irand 5)) # pan (slow 8 sine) # gain "1" # cut "1"),
    (90 + 114,90 + 118, sound "bit1*32" # n (4 + (irand 2))  # pan (slow 8 sine) # gain "1" # cut "1.1"),
    (90 + 118,90 + 134, sound "bit1*32" # n (5 + (irand 2))  # pan (slow 8 sine) # gain "1" # cut "3.1")
]

d1 $ sound "bit1*32" # n (2 + (irand 2))  # pan (slow 8 sine) # gain "1" # cut "3.1"
(79 + 70, 79 + 71, s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1"),
-- Final Part - drums
(78 + 70, 78 + 102, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
-- Glitch samples
(78 + 70, 78 + 78, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
(78 + 78, 78 + 86, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
(78 + 86, 78 + 90, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
(78 + 90, 78 + 92, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
(78 + 92, 78 + 102, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
-- distortion
(78 + 70, 78 + 102, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
-- cymbal
(78 + 70, 78 + 102, every 8 (striate (irand 256).(# pan "[0 0.5 1]")) $ sound "auto:6*8" # gain "1"),
-- Subbass
(78 + 102,78 + 103, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
(78 + 102,78 + 103, sound "bit1*16" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1"),
(78 + 103,78 + 106, sound "bit1*32" # n (irand 15) # pan (slow 8 sine) # gain "1" # cut "1.1"),
(78 + 106,78 + 108, sound "bit1*64" # n (irand 15) # pan (slow 8 sine) # gain "1" # cut "1")


d1 $ every 8 ((striate' (irand 32) (1/2)).(# pan "[0 1]")) $ sound "auto:6*8" # gain 1

d1 $ every 2 (#gain "0") $ sound "auto:8*30" # cutoff (scale 100 15000 $slow 5 $sine1) #resonance "0.3" |+| delay "0.25" |+| delaytime "0.375" |+| delayfeedback "0.5"
|=| gain "0.8"

cps(-1)
cps (1.1)
d1 $ every 2 (jux(stut 3 0.1 (-0.5))).(0.25 <~) $ every 8 ((# speed ((rand)))) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1" #cutoff (scale 1000 15000 $slow 10 $sine1) #resonance "0.3"

d1 $ every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain 1).jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"

d1 $ every 4 ((striate' (irand 128) (1/2)).(# speed ((rand)-0.5)).(# pan "[0 1]").(# gain 0.8)) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"

-- MEGADETH ŞARKI AÇILIŞ
d1 $ every 2 ((0.25 ~>).(every 4 (jux(rev)))) $ every 8 ((striate' (irand 64) (1/16)).(# gain 0.75)) $ s "bit1:4*8? dr_few:1*2 bit1:6 auto:5*4?" # gain "0.8" 
cps 1
let r = [0.1,-2,0.3,4,30]

-- Kendi başına şarkı oldu AQ
d2 $ every 4 (jux(rev)).(jux(brak)) $ every 2 (striate (irand 256)) $ s "bit1:4*8 bit1:4 dr_few:1*2 bit1:1 dr_few:1*8?" # gain 1 # speed "[0.1 -2 0.3 4 30]" # cutoff (scale 0 3000 $ sine)

cps 1.1
d1 $ every 4 (0.25 ~>) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" 
d2 $ sound "auto:6*8" # gain 1

d1 $ every 8 (0.25 ~>) $ every 8 ((jux(rev)).(every 2 (iter 4))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"
d2 $ every 8 (every 2 (striate (irand 256))) $ sound "auto:6*8" # gain 1

d1  $ every 8 (jux(rev).(every 2 (striate (irand 128)))).(every 2 (iter 4)) $ sound "dr_few*8" # n (irand 80) # gain "1"

-- APHEX TWIN
cps (145/120) 


d2 $ slow 1 $ every 16 (iter 4) $ every 4 (jux(rev)) $ s "mlkick:1*2 mlkick mlkick ~ mlkick:3" # gain 1


d1
$ whenmod 3 16 (jux(rev))
    $ every 32 (jux(rev))
    $ whenmod 3 8 (jux(striate 64))
    $ cat [
        ---every 16 (shuffle 4) $ s "akuma1*4" # n (irand 12) # gain 1,
    every 6 (striate 64).jux(rev) $ s "mlglitch3*2?  mlglitch5*2?" # n (irand 22) # pan "[0 1]",
   -- every 6 (striate 32) $ every 4 (shuffle 4) $ s "akuma1*4" # n (irand 12) # gain 1,
    every 4 (striate 128) $ s "mlglitch3*8" # n (irand 22)
    -- s "akuma1*8?" # n (irand 12) # gain 1
    ] --- nudge "[0 0.04 2 0.1 0.05]*4"



cps 1
--- 

d1 -- $ every 4 (iter 4) $ e 8 8 
$ stack [
  --sound (samples "bass1:0*4" (run 10)) # gain 1 # cut "0.3 0.5",
  every 4 (const $ s "ifdrums:10*4 ~ ifdrums:10*2 ifdrums:3" # gain 0.95) $ sound "ifdrums:10" # gain "1",
  slowcat [
  sound (samples "ul*8?" (irand 50)) # accelerate "-1" # sustain "0.05" # speed 100 # pan "[0 0 1 1 0.5 0.4 0.2 0.8 0 0 1 1]",
  sound (samples "glitch*8" (every 2 (density 1.2) $ density 1.21 $ run 150)) # pan "[0 1]",
  sometimesBy 0.9 ((# sustain "10").(# pan "0.5")) $ sound (samples "print*4?" (irand 13)) # pan "[0 1]" # gain "0.85" # sustain "0.1" # speed (rand*7)
  ] |+| unit "c" |+| speed "2"
]

d2 $ every 8 (# gain 0) $ every 8 (striate 32) $ sound "hh27*8" # n (irand 12) # gain "0.9"
d3 $ s "hoover" # n "<[3,2] 3 3 3 1>" # speed "1" 
d3 $ slow 4 $ s "dork2" # speed "-0.5"
