d1 $ s "bd"
setcps 0.52625

d4 $ s "sax" # gain (slow 4 $ range "0" "1.1" $ sine) #  speed "-0.6" # room "0.8" # size "0.8" # legato 6
d4   silence

d1 $ s "aset1(3,8)" # speed rand # cut 1 --  # n (irand 10)
d1 $ every 4 (# speed rand) $ s "aset1*8" # speed 8 # n (irand 8) # room 0.5 # size 0.5-- # cut 1
d2 $ s "aset1*8" # n 5 # cut 2
d1 silence

d3 $ every 2 (#gain "0") $ sound "auto:3*60" # gain "0.71" 
d3 $ every 2 (#gain "0") $ sound "auto:3*60" # gain "0.75" # speed (1 + sine*0.9)
d3 $ every 2 (#gain "0") $ striate 16 $ sound "auto:3*30" # gain "0.7" # shape "0.01" # room 0.8 # size 0.9
d3 $ fast 2 $ every 2 (#gain "0") $ sound "auto:3*60" # gain "0.7"
d4 silence
d3 $ fast 2 $ every 2 (#gain "0") $ sound "auto:3*60" # pan sine # gain "0.7"
d3 $ fast 2 $ every 2 (#gain "0") $ sound "auto:3*10(4,4)" # pan sine # gain "0.7"

d3 silence
d4 $ sometimes (#gain 0) $ every 16 ((loopAt "0.5").(# pan "[0 1]")) $ sound "bit1*8" # n (irand 30) # pan "[0 1]" # gain "1.3" -- # sustain 0.04 -- # cut "4"

d4 $ sometimes (striate 64) $ every 16 ((loopAt "0.2").(# pan "[0 1]")) $ sound "bit1*8" # n (irand 30) # pan "[0 1]" # gain "1.35" -- # sustain 0.04 -- # cut "4"

d4 $ sound "bit1*16" # n 1 # pan "[0 1]" # gain "1.3" # sustain 0.04 -- # cut "4"

d4 silence
d5 $ every 4 (jux(rev)) $ sound "jungbass:6/4" # gain "1.3" # shape 0.7


----------
d1 $ s "bd"

do
let fastArr = [2,4,8,6]
d1 
    -- $ every 4 (# speed "1 2").(fast (choose fastArr))
    $ every 8 (#speed "-0.5 5")
    $ chunk 4 (hurry (choose[1,2,4]))
    $ every 4 (#speed 3)
    $ s "sine" # shape 0.25 # speed (1 + sine *0.5)
    # room 0.85 # size 0.85
    # n (irand 2)
    # gain "0.9 0.8"
    # cut 1



d2 $ every 32 ((0.25 ~>).(#up "12*2 2*4").(plyWith 4 (|* "0.25"))) $ up "1 8 1 4" # s "bass1" # sustain "0.5" # gain "1.1" # cut "1" 


---- ALLEOPATHY
-- 28 bars later
d1 $ slow 2 $
    jux(brak) $
    every 4 ((fast (5 + (irand 10))).(#n (choose[48..86])).(#cut 1)) $ s "tt_fx*4" # n (choose[17..48]) # gain "0.7" # legato "1"

-- 78 bar later - wait for Selcuk's bass back
xfadeIn 2 10 $ every 32 ((#up "12*12 2*4").(plyWith 2 (|* "0.5"))) $ slow 4 $ up "4*4 ~ 8*8 ~" # s "bass1" # sustain "0.25" # gain "1.1" # cut "1" 

d2 $ every 32 ((0.25 ~>).(#up "12*12 2*4").(plyWith 4 (|* "0.25"))) $ slow 2 $ up "4*4 2*2 8*8 1*2" # s "bass1:4" # sustain "0.5" # gain "1.1" # cut "1" 

d3 $ s "auto:3(6,8)" # gain "1" # speed (1+rand)
d4 $ s "auto:5(16,8)" # gain "1" # speed (1-rand * 0.2)
d5 $ s "bit1:1(16,8)" # n "[1,2,3,5]" # gain "1" # cut 3 # speed (1-rand*0.4)
d5 $ s "bit1:1(16,8)" # n "[1,2,3,7]" # gain "1" # cut 3 # speed (1-rand*0.4)
d5 $ s "bit1:1(16,8)" # n pat8 # gain "1" -- # cut 3 # speed (1-rand*0.4)

d5 $ s ". bit1*30" # n pat2
d5 $ s ". . bit1*30" # n pat2
d6 $ s "aset1*16" # n pat8 # gain "1" # speed (1+sine*0.5)
d7 $ sometimes (#gain 0) $ s "click(9,16)" # n (irand 19) # speed (1 - rand *0.2) # gain "1" # room 0.9 # size 0.9 # sustain "0.7" 

d8 $ s "electrowave:3" -- # cut 4
d8 $ every 4 (# speed (1 + sine)) $ s "electrowave:3" 
d8 $ striate 32 $ every 4 ((# speed (1 + sine)).(striate 32).(# room 0.5 )) $ s "electrowave:3" # shape 0.15 # speed (1 + sine*0.1)
d9 $ every 4 ((# speed (1 + sine)).(#accelerate 0.5)) $ s "gab:3(6,16)" # shape 0.6 # gain "1"  
d9 $ every 4 ((# speed (1 + sine)).(#accelerate 0.5)) $ s "gab:3(9,16)" # shape 0.6 # gain "1"  
d4 $ s "auto:5(16,8)" # gain "1.5" # speed (1-rand * 0.2)

do
d1 $ silence
d2 $ silence
d3 $ silence
d4 $ silence
d5 $ silence
d6 $ silence
d7 $ silence
d8 $ silence
d9 $ silence


-- 112
d4 $ s "sax*2" # gain (slow 4 $ range "0" "1.2" $ sine) #  speed "-0.6" # room "0.8" # size "0.8" # legato 6
d1 silence

d1 $
    jux(brak) $
    every 2 ((fast (5 + (irand 10))).(#n (choose[48..86])).(#cut 1)) $ s "tt_fx*4" # n (choose[17..48]) # gain "1" # legato "1"


-- 160
d5 $ up "<13 10 7 1>" # s "sax" # room "0.8" # size "0.8" # gain "0.84" --- 0 7 10 13
d6 $ up "10" # s "sax" # gain "0.88" # room "0.8" # size "0.8" -- 0 7 10 13
d7 $ up "7" # s "sax" # gain "0.88" # room "0.8" # size "0.8" -- 0 7 10 13
d7 $ up "<13 10 7 1>" # s "sax(9,16)"  # gain "1" # room "0.8" # size "0.8" -- 0 7 10 13

let arr = [9, 12, 3, 15];
d6 $ s "sax" # gain "0.8" # room "0.8" # size "0.8" # up (choose arr)

d1 $
    jux(brak) $
    every 2 ((fast (5 + (irand 10))).(#n (choose[48..86])).(#cut 1)) $ s "tt_fx*4" # n (choose[48..86]) # gain "0.8" # legato "1"


-- 200 
do
    xfadeout 1 32 0
    xfadeout 2 32 1
    xfadeout 3 32 2
    xfadeout 4 22 3
    xfadeout 5 22 4
    xfadeout 6 22 5

    ---------
    ---------------------------------------------------------------------------------------
-- Song: Inflexion (RECORDED)
-- BPM: 240 cps(1) 
---------------------------------------------------------------------------------------
setcps(1)
-- Alp starts

-- every first sound resetcycles
xfadeIn 5 20 $ n "1" # s "latibro" # gain "1.3" # speed "-0.1"

-- 20
xfadeIn 6 20 $ every 8 (#up "<1 5>") $ every 4 (#up "<2 4>") $ n "1" # s "latibro" # gain "1.2" # speed "-0.2" 


-- 88
d7 $ slow "<2 1>" $ whenmod 16 10 (|+ speed (0.6 * (perlin))) $ whenmod 8 4 ( (#n "<1 2*2 1 4*2>") . (jux(rev . (|+ 2)))) $ bite 4 "<0*2 0> <1*2 3*1> 2 <3 2*2 <2,3,0*2>>" $ s "glitch*4 ul*4" # n (run 2)  # gain "0.95"
# room 0.5 
# cut 3

-- 120 -- fade out gelecek
do
    xfadeout 7 18 6
    xfadeout 5 18 4

-- 130
d1 $ every 4 (|* speed "<0.5 0.2 0.1>") $ sound "<aset1*16 dr_few*8>" # speed "-0.5" # n (irand 89) # gain "0.82"

d1 $ every 4 (|* speed "<10.5 5.2 -6.2>") $ sound "<aset1*16 dr_few*8>" # speed "-2.5" # n pat8 # gain "0.9"

d7 silence


-- 152
d2 
    $ every 4 (off 0.125 (|+ 12))
    $ every 4 (off 0.25 (#speed rand))
    $ every 4 (#up "<2 4>") 
    $ n "<3 1 2>" -- 3 1 2
    # s "cosmicg" 
    -- # speed 2
    # speed (range "-2" "2" $ fast 2 $ sine)
    # gain "0.7"
    # lpf 3000

-- 168
d2 
    $ off 0.125 (|+ 12)
    $ off 0.25 ((#speed rand).(|+ 7))
    $ every 4 (#up "<2 4>") 
    $ n "<3 1 2>" -- 3 1 2
    # s "cosmicg" 
    -- # speed 2
    # speed (range "-2" "2" $ fast 2 $ sine)
    # gain "0.7"
    -- # lpf 3000

-- 200
do
    xfadeIn 1 24 $ silence
    xfadeIn 2 24 $ silence
    xfadeIn 4 24 $ silence
    xfadeIn 5 24 $ silence
    xfadeIn 7 24 $ silence



-- 280
d2 
    $ off 0.125 (|+ 12)
    $ off 0.25 ((#speed rand).(|+ 7))
    $ every 4 (#up "<-1 0 2 4 8 -2>") 
    $ n "<3 1 2 2 4 6 7 9>" -- 3 1 2
    # s "[cosmicg tt_tom*3 tt_sn*2 tohh*10]" 
    -- # speed 2
    # speed (range "-2" "2" $ fast 2 $ sine)
    # cut 1
    # gain "0.68"


-- 298
d7 $ slow "<2 1>" $ (|+ speed ((rand) * (perlin))) $ whenmod 8 4 ( (#n "<1 2*2 1 4*2>") . (jux(rev . (|+ 0.1)))) $ bite 4 "<0*2 0> <1*2 3*1> 2 <3 2*2 <2,3,0*2>>" $ s "glitch*4 ul*4" # n (run 3)  # gain "1"
# room 0.4 
# cut 4


-- 350
do
    xfadeIn 1 32 $ silence
    xfadeIn 2 32 $ silence
    xfadeIn 3 32 $ silence
    xfadeIn 4 32 $ silence
    xfadeIn 7 32 $ silence


-- 360
d6 $ every 8 (#up "<1 5>") $ every 4 (#up "<4 8>") $ n "0" # s "latibro"  # shape 0.1 # gain "1.3" # speed "-0.2"

d6 $ every 8 (#up "<1 5>") $ every 4 (#up "<4 8>") $ fast 8 $ n "0" # s "latibro"  # shape 0.1 # gain "1" # speed (sine + sine) # cut 3

d1 silence 

d1 $ s "aset1(3,8)" # speed rand # cut 1 --  # n (irand 10)
d1 $ every 4 (# speed rand) $ s "aset1*8" # speed 8 # n (irand 8) -- # room 0.5 # size 0.5-- # cut 1
d2 $ s "aset1*8" # n 5 # cut 2 -- # gain sine
d2 $ s "aset1*8" # n 5 # cut 2 # gain sine
d2 $ every 4 ((#n "<1 2 3 4>").(#speed rand)) $ s "aset1*8" # n 5 # gain 0.95 # cut 2 -- # gain sine

d1 silence



-- 384
xfadeIn 6 25 $ silence



d4 $ s "noise:10"
d6 $ s "square" # gain "1"
d5 $ s "noise*8" # n (irand 6) # gain "1" # speed "1" # cut "1" 
d5 $ s "noise" # shape 0.2 # gain "1" # speed (slow 4 $ range 0 2 $ sine) # room 0.8 # size 0.98 # legato 1
d4 $ every 4 (#n (irand 8)) $ s "yeah*8" # gain "0.9" # n (irand 8) # speed "3" # pan "[0 0.5 1]"

d4 $ every 4 (#n (irand 8)) $ s "yeah*8" # gain "0.9" # n (irand 8) # speed "3" # pan "[0 0.5 1]"# room 0.8 # size 0.98
d4 $ every 4 (#n (irand 8)) $ s "yeah*8" # gain "0.9" # n (irand 1) # speed (rand) # pan "[0 0.5 1]"

-- Somethings happening
d1 $ n "4 4 4 4" # s "bass2" # gain "0.8"
d1 $ every 4 (jux(rev)) $ n "4 4 4 4" # s "bass2" # lpf (slow 8 $ range 90 600 $ sine) # gain 1
d3 $ every 8 ((# s "bass2:6").(# cut "1")) $ every 4 ((# s "bass2:4").(# cut "1")) $ n "2 0 2 0" # s "bass2" # cut "1" # gain "1"

d4 silence
d3 silence
d5 silence
unsolo 4

d1 $ s "less" # n ("5" + irand 7)
d2 $ zoom(0.2, 0.3) $ striate 4 $ s "made2" # gain "0.6" # cut "1"
d2 $ zoom(0.26, 0.6) $ striate 4 $ s "made2" # gain "0.6" # cut "1" 
d2 $ zoom(0.26, 0.6) $ striate (32) $ s "made2" # gain "0.6" # pan perlin

d2 $ striate (2) $ s "made2" # gain "0.8" # pan perlin #speed (0.02+rand*0.01) # cut 2 

d1 $ s "drum*8" # n (irand 15) # gain "1"
d1 $ s "drum*8" # n (irand 15) # gain "0.9" # sz 0.7 # room 0.6 
d1 $ s "drum*8" # n (irand 15) # gain "1" # lpf (range 100 8000 $ slow 2 $ sine)
d1 $ s "drum*8" # n (irand 15) # gain "0.9" # sz 0.7 # room (0.1 + sine*0.9) # sustain 0.01
d1 $ s "drum*8" # n (irand 15) # gain "0.9" # sz 0.7 # room 0.6 # sustain (range 0.01 0.02 $ slow 1 $ tri) 

--- keep it ---
d4 $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, click:5/4]]" #gain 1.4 # shape 0.4 # cut 4
d4 $ every 4 (striate 2) $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, click:5/4]]" #gain 1.4 # shape 0.4 # cut 5
d4 $ every 4 (striate 4) $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, click:5/4]]" #gain 1.4 # shape 0.4 # cut 5
d4 $ every 4 (striate 8) $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, click:5/4]]" #gain 1.4 # shape 0.4 # cut 6
d4 $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, click:5/4]]" #gain 1.4 # shape 0.4 # cut 4


d1 $ s "supernoise*4" # midinote ((irand 10) + 30) # sustain "0.9"
# accelerate "0.1" # slide "-0.5" # resonance "0.7"
# attack "1" # release "2" # room "0.9" # size "0.8" # gain "1.2"
# cut 5

d1 $ every 4 (# sustain (0.4 + rand*0.6)) $ s "supernoise(3,8)" # midinote ((irand 20) + 100) # sustain "0.04" # accelerate rand # slide "-0.1" # resonance "0.8" # release "30" # room "0.9" # size "0.9" 
# gain "0.85"
# cut 5


d1 $ every 4 (# sustain (0.4 + rand*0.6)) $ s "supernoise(3,8)" # midinote ((irand 20) + 80) # sustain "0.04"
# accelerate "0.1" # slide "0.5" # resonance "0.7" # release "20" # room "0.9" # size "0.9" 
# gain "0.8"
# cut 5

d2 $ slow 8 $ striate' 12 0.3 $ up pat1 # sound "moog" # gain "1" # speed "1" # cut "1"

d2 silence


d1 -- $ every 4 (iter 4) $ e 8 8 
$ stack [
  -- sound (samples "bass1:0*4" (run 10)) # gain 1 # cut "0.3 0.5",
  -- every 4 (const $ s "ifdrums:10*4 ~ ifdrums:10*2 ifdrums:3" # gain 1) $ sound "ifdrums:10" # gain "1",
  slowcat [
  -- sound (samples "ul*8?" (irand 50)) # accelerate "-1" # sustain "0.05" # speed (irand 100) # pan "[0 0 1 1 0.5 0.4 0.2 0.8 0 0 1 1]" # gain "0.8",
  -- sound (samples "glitch*8" (every 2 (density 1.2) $ density 1.21 $ run 150)) # pan "[0 1]",
  sometimesBy 0.9 ((# sustain "10").(# pan "0.5")) $ sound (samples "print*4?" (irand 13)) # pan "[0 1]" # gain "0.9" # sustain "0.41" # speed (rand*7)
  ] |+| unit "" |+| speed "2",
  s "akuma1*8" # n (irand 10) # gain "0"
] # gain 1.1

d1 silence


d3 $ every 4 ((# gain 0).(stut 2 8 20).(every 8 (striate 32))) $ s "fall2" # gain 1 # lpf "3000"
d3 $ every 4 ((# gain 1).(stut 2 (irand 10) (irand 40))) $ s "fall2" # gain 0 # lpf "2000"