d1 $ sound "bd*3 ~" # speed (rand) 


d1 $ sound "[[bass2 bass2] bass2]" # legato "[0.1 1] 0.4"

d1 $ sound "bev" |+| cut "1"
d1 $ slow 16 $ striate 16 $ sound "bev" 
d1 $ slow 16 $ striate 16 $ sound "bev" # loop  "1"

-- OLEY
d1 $ zoom (0.6, 0.65) $ striate 32 $ sound "bev" # cut "1"

d1 $ every 4 ((# speed "1").(# room "0.1").(# delay "0.5").(#delayfeedback "0.5")) $ zoom (0.8, 1) $ striate 16 $ sound "bev" # speed "-0.5" 


d1 $ slow 16 $ striate' 16 0.1 $ sound "bev"

let hpfa = [100,200,300,500,1000,10000,20000]

d1 $ every 6 (#gain 0) $ every 8 ((#speed (rand))) $ every 4 ((rev).(striate' 64 (1/16)).(#pan (rand))) $ sound "[akuma4:1 akuma4:1] akuma6:1/2 [dr_few:2*2 [akuma5:1 akuma5:4]] z<<akuma2 akuma2:2 akuma2:4 akuma6:1>" # hpf (choose hpfa) 

d2 $ every 6 ((jux(rev)).(striate' (irand 32) (1/32))) $ every 4 ((#n (irand 32)).(fast (irand 4))) $ sound "akuma1 akuma1:2 akuma1 akuma2"

d3 $ slow 2 $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, click:5/4]]" #gain "1 0 1.1 .0.9 1.2"

d4 $ slow 4.5 $ sound "sheffield*8" # gain "1" 

-- FEROX 2
cps(0.75)

d1 $ s "drum*8" # n (irand 8) # gain "1"
d2 $ every 4 ((# gain 0.9).(stut 2 8 20).(every 6 (striate' 32 0.2))) $ s "fall2" # gain 0.4 
d3 $ slow 4 $ every 4 (const $ up "12*14 ~ 12*14 ~" # s "bass1") $ up "4*4 ~ 8*8 ~" # s "bass1" # sustain "0.25" # gain "1"
d4 $ s "chin*3 chink*2? click*2 casio?" # n (irand 12) # pan (slow 5 sine) # gain "1" 
d5 $ s "cosmicg*8?" # n (irand 13) # gain "0.8"
d6 $ zoom (0.5,0.6) $ striate 22 $ s "dark:2" # speed (-1 * (rand)) # gain "0"
d6 $ sometimesBy 0.15 (# gain 1) $ s "dark/8" # n "2" # sustain "10" # gain 1


-- dark ambient AMBIENT
d2 $ slow 4.5 $ every 4 (# speed (rand)) $ sound "defdo:2 sea/2 " # gain "0.85 1"
d5 $ sound "[ade:5 ade:10]" # gain "[0.8 0]" # pan (slow 0.3 $ saw)
d3 $ fast 1.2 $ up "[0 1]/8" # sound "ade:0"  # pan (slow 8 $ saw) # gain "0.7"
d4 $ every 4 (# speed (-1*rand)) $ s "pad" # gain "0.8" # cut "1"
d3 $ loopAt 3 $ sound "{ade:2 pad pad:1}" # gain "0" # speed (rand)
---------------

""" old riff - complex systems2 """
d2 $ slow 2 $ jux ((# speed "0.5") . rev)  $ up "[1 0]/2" # sound "armora:2"
d1 $ slow 3 $jux (fast 4) $ striate' 16 (1/4) $ sound "vocad/2"

---------------- DRONE WARS
d1 $ iter 4 $ up "0 ~ 12 24 [48 72 36]" # sound "[jungbass:6]" # pan sine1 # speed "1"
d2 $ sometimes (jux (rev)) $ every 4 (density 2) $ sound "gabba*6 rave:2/2 [cp ~ cp]" # gain 0.7


---------------- BG NOISE
d2 $ every 4 (echo (negate 3/32)) $ n "c5*4" # s "supernoise"
# accelerate "-2" # speed "2" # sustain "0.1 ! ! 1" # voice "0.0"

d1 $ s "supernoise/8" # midinote ((irand 10) + 30) # sustain "8"
# accelerate "0.5" # voice "0.5" # pitch1 "0.15" # slide "-0.5" # resonance "0.7"
# attack "1" # release "20" # room "0.9" # size "0.9" # orbit "1"


d1 $ slow 8 $ striate' 16 0.5 $ sound "moog moog:3 moog:5" # gain "0.85"


------ NOISEYYYY
d2 $ s "gab*19?"
# speed 1
# pan (slow 15 $ sine)
# end (discretise (1/8) $ slow 19 $ scalex 0.0001 0.01 $ rand)
# loop 99
# delay 0.9
# delayfb 0.95
# delayt (discretise (1/9) $ slow 23 $ scalex (1/999) (1/9) $ rand)
# lpf (slow 2 $ scale 200 20000 $ rand)
# gain 0.9

d1 $ every 4 (0.11 <~) $ every 16 (degradeBy 0.01) $ shuffle 4 $ s "vocad*8 noise2:1/2 <noise2,noise:3,noise:5,noise:6> noise:4" # unit "c" # speed 0.4 # cutoff "300 20000" # shape "0.5" # gain "0.9 1.3 1 1.1"

----------------
---- AMBIEEEENNNNNT
d1 $ slow 4 $ striate 64 $ up pat3 # s "padlong"
|+| sustain "0.25"
|+| delay "0.5" # delaytime "0.375" # delayfeedback "0.75"
|+| cutoff (scale 800 1000 $ slow 4 $ sine1) # resonance (scale 0.02 0.4 $ slow 4 $ sine1) # gain 0.9


-----------------
---- SOME KIND OF WIERD
d1 $ s "imp*5" # gain 1 # cutoff (scale 20 20000 $ slow 3 $ sine)
d1 $ s "cyclo*5" # gain 1 # speed 1 #accelerate 1


-----------------
---- MINI SET
d1 $ striate 2 $ every 4 (jux(rev)) $ s "newnotes*4?" # n (irand 15) # delay "0.2" # delayfeedback "0.25" 
d3 $ s "{auto:3,auto:2} ~ [auto:3 [auto:1 auto:5 auto:4 ~]] ~" # gain "0.9"

-----------------
---- VOCAL PADDS
d4 $ slow 45 $ striate 64 $ s "dark:2" # gain "1" 
d2 $ s "procshort*4?" # n (irand 6) # gain "1" # pan "[0 1]"

-----------------
---- APHEX TWIN
d2 $ slow 1 $ every 16 (iter 4) $ every 4 (jux(rev)) $ s "mlkick:1*2 mlkick mlkick ~ mlkick:3" # gain 1


-----------------
--- FEROX
-- MEGADETH ŞARKI AÇILIŞ
d1 $ every 2 ((0.25 ~>).(every 4 (jux(rev)))) $ every 8 ((striate' (irand 64) (1/16)).(# gain 0.75)) $ s "bit1:4*8? dr_few:1*2 bit1:6 auto:5*4?" # gain "0.8" 
cps 1
let r = [0.1,-2,0.3,4,30]

-- Kendi başına şarkı oldu AQ
d2 $ every 4 (jux(rev)).(jux(brak)) $ every 2 (striate (irand 256)) $ s "bit1:4*8 bit1:4 dr_few:1*2 bit1:1 dr_few:1*8?" # gain 1 # speed "[0.1 -2 0.3 4 30]" # cutoff (scale 0 3000 $ sine) # gain "0.8"


-------------------- 
--- AP TN REMIX
d1 -- $ every 4 (iter 4) $ e 8 8 
$ stack [
  --sound (samples "bass1:0*4" (run 10)) # gain 1 # cut "0.3 0.5",
  every 4 (const $ s "ifdrums:10*4 ~ ifdrums:10*2 ifdrums:3" # gain 0.95) $ sound "ifdrums:10" # gain "1",
  slowcat [
  sound (samples "ul*8?" (irand 50)) # accelerate "-1" # sustain "0.05" # speed 100 # pan "[0 0 1 1 0.5 0.4 0.2 0.8 0 0 1 1]",
  sound (samples "glitch*8" (every 2 (density 1.2) $ density 1.21 $ run 150)) # pan "[0 1]",
  sometimesBy 0.9 ((# sustain "10").(# pan "0.5")) $ sound (samples "print*4?" (irand 13)) # pan "[0 1]" # gain "0.85" # sustain "0.1" # speed (rand*7)
  ] |+| unit "c" |+| speed "2"
]

d2 $ every 8 (# gain 0) $ every 8 (striate 32) $ sound "hh27*8" # n (irand 12) # gain "0.9"
d3 $ s "hoover" # n "<[3,2] 3 3 3 1>" # speed "1" 
d3 $ slow 4 $ s "dork2" # speed "-0.5"

--------------------- LOOOOOONG
cps 0.25

d2
$ jux (iter 4)
$ every 4 (gap 4)
$ every 5 (chop 4)
$ stack[
  up pat6 |=| sound "auto:4" # speed (scale 1.0 5.0 $ rand),
  up pat4 |=| sound "auto:6" # speed (scale 1.0 5.0 $ rand),
  up pat5 |=| sound "auto:2" # speed (scale 1.0 5.0 $ rand)
]
|=| cutoff (scale 1000 12000 $ slow 3 $ sine1) # resonance (scale 0.1 0.4 $ rand)
|=| delay "0.5" # delaytime "0.375" # delayfeedback "0.8"



d3
$ jux (iter 8)
$ stack[
 up pat5 |=| sound "drum:3",
 up pat6 |=| sound "drum:0",
 up pat4 |=| sound "drum:6"
]
|+| delay "0.25" |+| delaytime "0.375" |+| delayfeedback "0.5"
|=| gain "1.3"


d4
-- $ jux (iter 32)
-- $ every 3 (chop 8)
$ stack[
 up pat5 |=| sound "akuma1:1" |=| speed "0.5 0.25 1.0 -1.0",
 up pat2 |=| sound "akuma1:0" |=| speed "1.0 0.5 0.25 1.0 -1.0",
 up pat3 |=| sound "akuma1:3" |=| speed "1.0 -0.5 0.25 1.0 -1.0 1.0 1.5",
 up pat4 |=| sound "akuma1:2" |=| speed "0.5 0.25 -1.5 1.0 -0.75 1.0 -0.25"
]
|*| speed "1.0" |*| speed "1.25"
|+| delay "0.5" # delaytime "1.375" # delayfeedback "0.8"
|+| cutoff (scale 100 8000 $ slow 1 $ sine1) # resonance (scale 0.1 0.8 $ slow 8 $ sine1)
|=| gain "1.0"

hush

d5
-- $ jux rev
$ n "[c2 [[~ b2] g2] b1 [d2 g2]] ~" # s "supersaw" # pan (rand)
|+| sustain "0.25"
|+| resonance "0.2" # lfo "6"
|+| cutoff (scale 800 1000 $ slow 4 $ sine1) # resonance (scale 0.01 0.2 $ slow 4 $ sine1)
|+| delay "0.5" # delaytime "0.375" # delayfeedback "0.9"
|+| gain "1.4"


let pat1 = "{0*2 ~ [0 ~] ~ 0*4 [~ 0] 0}%4"

let pat2 = "{[~ 0] 0 ~ 0 [~ 0] ~ 0}%4"

let pat3 = "{0 0*4 [~ 0] [~ 0] 0*2  0 ~ 0*4 ~ 0 -12 0 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"

let pat4 = "{0 0*2 [~ 0] [~ 0] 0 0 -12 0*4 ~ 0 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0*2 -12}%8"

let pat5 = "{[~ 0] 0 0 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0 -12 0*4 ~ [~ 0] [~ 0] ~ 0*2 -12}%4"

let pat6 = "{~ 0 ~ 0 -12 0*4 0 0*2 [~ 0] -12 0*4 ~ 0 ~ 0 -12 0*2 ~ [~ 0] [~ 0] ~ 0*2 -12}%4"

------------------- LOOOOOOONG 2
cps 0.25

d2
$s "akuma3(3,16,5)"
#sustain "1.0"
#gain "1.0"

d3
$s "akuma4(3,16,9)"
#sustain "1.0"
#gain "1.0"


d4
$stack[
  s "sine(5,16)" # n "{c5, e5, f5, g5, a5}"
]
#cutoff (scale 800 15000 $slow 4 $sine1) #resonance "0.2"
#sustain "0.08"
#gain "1"


d1
$stack[
  s "supersaw(7,16,13)" #n "{0, 7, 10, 17, 19}" #speed "1.5" #pan (rand),
  s "supersaw(7,16,11)" #n "{0, 7, 10, 17, 19}" #speed "1.0" #pan (rand),
  s "supersaw(3,16,7)" #n "{0, 7, 10, 17, 19}" #speed "0.75" #pan (rand),
  s "supersaw(3,16,5)" #n "{0, 7, 10, 17, 19}" #speed "0.5" #pan (rand),
  s "supersaw(3,16,3)" #n "{0, 7, 10, 17, 19}" #speed "0.25" #pan (rand)
]
|+|n "0 7 -7 0 0 -5 5"
#cutoff (scale 800 18000 $slow 16 $sine1) #resonance "0.1"--(rand)
#sustain "0.5"
#gain "0.6"
#shape "0.5"
#room "1.0"

d5
$jux (iter 16)
$s "supersaw(7, 16, {3, 4})" # n "{c7, e7, f7, g7, a7, d8}"
 -- |+| up "5 0 -5 0 -12 12 7 0 -7 0"
#sustain "0.05"
#cutoff (scale 2000 15000 $slow 5 $sine1) #resonance "0.3"
#gain "0.8"
#shape "0.5"

d6
$jux (iter 4)
$jux (iter 8)
$ stack[
  -- sound "arpy(3,16,3)",
  -- sound "felld(5,16,0)",
  -- sound "fell2(5,16,8)"|+|up "-7 0 7 14",
  --sound "procshort(3,16,4)",
  --sound "procshort(2,15,3)",
  sound "bass(3,16,2)",
  sound "space(3,16,10)",
  sound "glitch(3,16,5)",
  --sound "808bd(3,16,9)"
  sound "click(3,16,3)",
  sound "sine(3,16,3)"
]
#n (irand 128)
#gain "1"
#shape "0.3"
#pan (rand)
#up "{7 0 -7 0 5 -12 0 12 0 7 0 -7 0 12}%16"
-- #cutoff (scale 800 15000 $slow 3 $rand) #resonance "0.3"
--- pad pad:1

d6
$jux (iter 16)
-- $every 2 (#gain "0")
$stack [
  s "auto(3, 16, 5)",
  s "drum(2, 16, 2)",
  s "psr(4,16)",
  s "glitch(2, 16)"
]
#n (irand 64)
#gain "1"
#pan (rand)

d6
$ fast 2
$jux (iter 8)
$ stack [
 s "ifdrums(2, 16, 1)",
 s "bd(3, 16, 0)",
 s "glitch(3, 16, 2)",
 s "bass(2, 16, 3)",
 s "dr55(2,16,5)}"
]
#pan (rand)
#n (irand 64)
#gain "1"
#shape "0.5"


----------------------
---- DARK DAYS
d1 $ slow 32 $ jux (rev) $ striate' 64 (1/8) $ sound "dark" # gain "1.4"
d2 $ sound "[auto:5 auto:5 ~ ~] ~ auto:2"
d1 $ slow 32 $ jux ((# speed "0.5") . rev) $ striate' 32 (1/8) $ sound "dark" # gain 1
d2 $ every 4 (jux (rev)) $ sound "[bd:10*4 dr_few:4*4,sn auto:9]" # gain "[[1 0.8]*2-0.5 [0.5-0.2 0.8-0.2]]/2"
d3 $ every 4(jux(rev)) $ sound "[click:3 click:4*2 drum:1*3]" # gain "[[1 0 0 0.8 0]]"
d4 $ sound "[[[bass1/2] bass1 bass1 bass1], [click:3, every click:5/4]]" #gain 1

----------------------
cps -1
cps (1.1)
d1 $ seqP [
    (0, 1 , s "click:2"),
    -- intro 1
    (0 + 4, 2 + 4, fast 8 $ spaceOut ([1,0.98..0.0]) $ s "auto:3*12" # gain "0.6" # sustain "1"),
    (2 + 4, 3 + 4, ((striate' (43) (1/2)).(# gain "0.75").(# speed (-0.05))) $ s "auto:4" # gain "1"),
    -- intro 2
    (2 + 4, 3 + 4, sound "jungbass:8" # gain "0.95" # speed 0.6 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (5 + 4, 7 + 4, fast 9 $ spaceOut ([1,0.98..0.0]) $ s "auto:3*12" # gain "0.61" # sustain "1"),
    (5 + 4, 7 + 4, ((striate' (irand 40) (1/2)).(# gain "0.75").(# speed (-0.04))) $ s "auto:4" # gain "1"),
    -- intro 3
    (7 + 4, 8 + 4, sound "jungbass:8" # gain "0.95" # speed 0.5 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (10 + 4, 12 + 4, fast 10 $ spaceOut ([1,0.98..0.0]) $ s "auto:3*12" # gain "0.62" # sustain "1"),
    (12 + 4, 13 + 4, ((striate' (irand 52) (1/2)).(#gain 0.75).(# speed (-0.05))) $ s "auto:4" # gain "1"),
    (12 + 4, 13 + 4, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (15 + 4, 19 + 4, fast 12 $ spaceOut ([1,0.99..0.0]) $ s "auto:3*12" # gain "0.64"),
    -- Part 2
    (18 + 4, 33 + 4, sound "auto:6*8" # gain "1" # hpf (slow 8 $ scale 1000 8500 $ sine)),
    (18 + 4, 25 + 4, s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (25 + 4, 26 + 4, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    (25 + 4, 33 + 4, every 8 ((striate' (irand 22) (1/16)).(#gain 0.75).(# speed ((rand)))) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (18 + 4, 19 + 4, sound "auto:8*30" # gain "1" ),
    (19 + 4, 33 + 4, every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    (33 + 4, 34 + 4, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine)),
    -- Part 3
    (34 + 4, 41 + 4, s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (34 + 4, 50 + 4, sound "auto:6*8" # gain "1"),
    (41 + 4, 50 + 4, every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((stut 2 0 (0.5)).(0.25 <~)) $ s "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (34 + 4, 35 + 4, sound "auto:8*30" # gain "1" # lpf (scale 400 10000 $ sine)),
    (35 + 4, 50 + 4, every 2 (#gain "0") $ sound "auto:8*30" # gain "1" # lpf (scale 500 15000 $ sine)
    ),
    (49 + 4, 50 + 4, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    -- Part 4
    (51 + 4, 83 + 4, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    (51 + 4, 83 + 4, every 8 (striate (irand 256).(# pan "[0 1]")) $ sound "auto:6*8" # gain 1),
    (51 + 4, 83 + 4, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    (51 + 4, 59 + 4, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (59 + 4, 67 + 4, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
    (67 + 4, 69 + 4, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (69 + 4, 71 + 4, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (71 + 4, 75 + 4, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (75 + 4, 79 + 4, sound "bit1*8" # n (4 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (79 + 4, 83 + 4, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.4"),
    (83 + 4, 84 + 4, sound "jungbass:8" # gain "0.95" # speed 0.75 # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    -- Idle verse
    (87 + 4, 87 + 4 + 68, sound "jungbass:4*16" # gain "0.5" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 4, 87 + 4 + 4, every 8 ((# speed "-0.5").(degrade).(jux(rev))) $ every 2 (# speed "-0.5") $ sound "auto:8*30" # gain "1" #cutoff 300 #resonance "0.1"),
    (87 + 4 + 4, 87 + 4 + 8, every 8 ((# speed "-0.4").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 500 #resonance "0.13"),
    (87 + 8 + 4, 87 + 4 + 12, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 700 #resonance "0.15"),
    (87 + 12 + 4, 87 + 4 + 16, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 900 #resonance "0.17"),
    (87 + 16 + 4, 87 + 4 + 20, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 1200 #resonance "0.19"),
    (87 + 20 + 4, 87 + 4 + 24, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.3") $ sound "auto:8*30" # gain "1" #cutoff 1500 #resonance "0.2"),
    -- Drums  i
    (87 + 20 + 4, 87 + 4 + 24, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.3"#cutoff 1200 # speed "-0.12"),
    (87 + 24 + 4, 87 + 4 + 28, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 (# speed "-0.4") $ sound "auto:8*30" # gain "1" #cutoff 1800 #resonance "0.2"),
    (87 + 24 + 4, 87 + 4 + 28, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.4"#cutoff 1800  # speed "0.1"),
    (87 + 28 + 4, 87 + 4 + 32, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.38")) $ sound "auto:8*30" # gain "1" #cutoff 2200 #resonance "0.2"),
    (87 + 28 + 4, 87 + 4 + 32, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.5"#cutoff 2200  # speed "0.24"),
    (87 + 32 + 4, 87 + 4 + 36, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.34")) $ sound "auto:8*30" # gain "1" #cutoff 2500 #resonance "0.2"),
    (87 + 32 + 4, 87 + 4 + 36, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.6"#cutoff 2500  # speed "0.45"),
    (87 + 36 + 4, 87 + 4 + 40, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.25")) $ sound "auto:8*30" # gain "1" #cutoff 2800 #resonance "0.18"),
    (87 + 36 + 4, 87 + 4 + 40, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.7"#cutoff 2800  # speed "0.6"),
    (87 + 40 + 4, 87 + 4 + 44, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.31")) $ sound "auto:8*30" # gain "1" #cutoff 3200 #resonance "0.16"),
    (87 + 40 + 4, 87 + 4 + 44, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.8"#cutoff 3200  # speed "0.7"),
    (87 + 44 + 4, 87 + 4 + 48, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.33")) $ sound "auto:8*30" # gain "1" #cutoff 3500 #resonance "0.14"),
    (87 + 44 + 4, 87 + 4 + 48, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "0.9"#cutoff 3500  # speed "0.8"),
    (87 + 48 + 4, 87 + 4 + 52, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.2")) $ sound "auto:8*30" # gain "1" #cutoff 3800 #resonance "0.12"),
    (87 + 48 + 4, 87 + 4 + 52, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" # cutoff 3800  # speed "0.9"),
    (87 + 52 + 4, 87 + 4 + 56, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.23")) $ sound "auto:8*30" # gain "1" #cutoff 4100 #resonance "0.1"),
    (87 + 52 + 4, 87 + 4 + 56, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4100  # speed "0.95"),
    (87 + 56 + 4, 87 + 4 + 60, every 8 ((# speed "-0.3").(degrade).(jux(rev))) $ every 2 ((# speed "-0.3")) $ sound "auto:8*30" # gain "1" #cutoff 4500 #resonance "0.05"),
    (87 + 56 + 4, 87 + 4 + 60, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"#cutoff 4500 # speed "1"),
    (87 + 60 + 4, 87 + 4 + 72, every 2 ((#gain "0")) $ sound "auto:8*30" # gain "1"  # speed "1" #resonance "0"),
    (87 + 60 + 4, 87 + 4 + 72, sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" #resonance "0"),
    (87 + 68 + 4, 87 + 4 + 72, every 4 (jux(rev).(0.25 ~>).(stut 4 0.1 (-0.5))) $ every 8 ((stut 2 0 (0.5)).(0.25 <~)) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1" #resonance "0"),
    (87 + 72 + 4, 87 + 4 + 73, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    (87 + 73 + 4, 87 + 4 + 74, s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1"),
    -- Fade out bg texture melody
    (87 + 68 + 4, 87 + 4 + 69, sound "jungbass:4*16" # gain "0.48" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 69 + 4, 87 + 4 + 70, sound "jungbass:4*16" # gain "0.46" # pan (slow 1 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 70 + 4, 87 + 4 + 71, sound "jungbass:4*16" # gain "0.35" # pan (slow 5 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 71 + 4, 87 + 4 + 72, sound "jungbass:4*16" # gain "0.25" # pan (slow 2 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 72 + 4, 87 + 4 + 73, sound "jungbass:4*16" # gain "0.1" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    (87 + 73 + 4, 87 + 4 + 74, sound "jungbass:4*16" # gain "0.01" # pan (slow 3 sine) # cutoff (fast 80 $ scale 10 3300 $ sine)),
    -- Final Part - drums
    (90 + 70 + 4, 90 + 4 + 102, every 8 ((const $ every 16 ((jux(rev)).(#gain 0.9).(0.25 ~>)) $ s "dr_few:1 dr_few:1*2 bit1:1 dr_few:1*8" # gain "1.1").jux(rev).(every 2 (striate (irand 128)))) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"),
    -- Glitch samples
    (90 + 70 + 4, 90 + 4 + 78, every 8 ((# gain "0")) $ sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90 + 78 + 4, 90 + 4 + 86, every 8 ((# gain "0")) $ sound "bit1*8" # n "0" # pan (slow 8 sine) # gain "1" # cut "1.6"),
    (90 + 86 + 4, 90 + 4 + 90, sound "bit1*8" # n (irand 55) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90 + 90 + 4, 90 + 4 + 92, sound "bit1*8" # n (2 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    (90 + 92 + 4, 90 + 4 + 102, sound "bit1*8" # n (irand 15) # pan "[0 0.5 1]" # gain "1" # cut "1.6"),
    -- distortion
    (90 + 70 + 4, 90 + 4 + 102, every 8 (# gain "0") $ every 2 (#gain "0") $ sound "auto:8*30" # gain "1"),
    -- cymbal
    (90 + 70 + 4, 90 + 4 +102, every 8 (striate (irand 256).(# pan "[0 0.5 1]")) $ sound "auto:6*8" # gain "1"),
    -- Subbass
    (90 + 102 + 4,90  + 4+ 103, sound "jungbass:8" # gain "0.95" # speed 0.75 # gain "1" # lpf (slow 4 $ scale 20 450 $ sine) # pan (slow 8 sine)),
    (90 + 102 + 4,90  + 4+ 103, sound "bit1*16" # n (1 + (irand 2)) # pan "[0 0.5 1]" # gain "1" # cut "1"),
    (90 + 103 + 4,90  + 4+ 106, sound "bit1*32" # n (irand 15) # pan (slow 8 sine) # gain "1" # cut "1.1"),
    (90 + 106 + 4,90  + 4+ 114, sound "bit1*64" # n (5 + (irand 5)) # pan (slow 8 sine) # gain "1" # cut "1"),
    (90 + 114 + 4,90  + 4+ 118, sound "bit1*32" # n (4 + (irand 2))  # pan (slow 8 sine) # gain "1" # cut "1.1"),
    (90 + 118 + 4,90  + 4+ 134, sound "bit1*32" # n (5 + (irand 2))  # pan (slow 8 sine) # gain "1" # cut "3.1")
]


-- BACKUP FEROX
d1 $ s "auto:3 ~"
d1 $ every 8 (jux(rev).(every 2 (striate (irand 128)))).(every 2 (iter 4)) $ sound "auto:3 ~ [auto:3 auto:3] ~" # gain "1"
d2 $ sound "auto:6*8" # gain 1
d3 $ every 2 (#gain "1") $ sound "auto:8*30" # gain "0"
d4 $ sound "bit1*8?" # n (irand 55) # gain "0.1" # pan "[0 1]" # gain 0
d5 $ sound "jungbass:5/8" # gain "0.9"


-- intro 2 - minimal saxophone noise
cps 1
d1 $ up "[12 0]/2" # sound "bass1" # gain "1"
d2 $ jux(rev) $ up "[4 4]/4" # sound "sax:2/4" # gain "1"
d3 $ sound "<sax:20/8  sax:21/8 sax:19/4  sax18/2>" # gain 1
d4 $ sound "click*2" # n "{<0 3 0 5>,<1 1 4 7>}" # gain 1
d4 $ sound "glitch*16?" # n (irand 8) # gain "0" # pan "[1 0]"
d5 $ striate 64 $ sound "sine*4?" # n (irand 8) # gain "1" # pan "[0 1]"

-- set space 5
d1 $ fast 2
$ every 32 (jux(rev))
$ cat [
    s "mlkick:1*2 mlkick",
    every 6 (striate 64).jux(rev) $ s "mlglitch3*2? mlglitch*2?" # n (irand 7) # pan "[0 1]",
    s "mlkick ~ mlkick:3",
    every 4 (striate 128) $ s "mlglitch3*4" # n (irand 12)
]  # nudge "[0 0.04]*4"


-------------
d1 $ chunk 4 (fast 2) $ n "0(3,8,<0 2>)" # sound "dark:2"
   # size (slow 8 saw)
   # room (slow 8 saw)
   # legato 1
   # lpf (slow 4 $ scale 1000 2000 sine)
   # lpq 0.2
   # orbit 1
   # speed (scale 1 2 saw)

d2 $ jux (rev) $ iter 4 $ n "0 .. 3" # sound "click" # lpf 3000 # lpq 0.3 # gain 1