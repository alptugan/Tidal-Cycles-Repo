
d7 $ stack [
    whenmod 8 4 (#n (irand 8)) $ every 16 (iter 4) $ every 4 (jux(rev)) $ s "mlkick:1*2 mlkick mlkick ~" # gain 1
    ,s "chin*8?" # n (irand 6) # gain "1.3" # pan "[0 0.5 1]" # speed (-0.5 + (rand))
    , s "superimpose*8" # n "{9,2,30}" 
]

--------------------------------------------------------------------------------------------
---------------------------------- BUILT-IN SYNTHS -----------------------------------------
--------------------------------------------------------------------------------------------
-- Many example synths can be found in the default-synths-extra.scd file in the SuperDirt/library folder or in default-synths.scd and tutorial-synths.scd in the SuperDirt/synths folder. These include:

-- a series of tutorials: tutorial1, tutorial2, tutorial3, tutorial4, tutorial5

-- supersaw 
-- supermandolin
-- supergong
-- superpiano 
-- superhex

-- DRUM KIT
-- superkick, superhat, supersnare, superclap, super808

-- ANALOGUE SYNTHS
-- supersquare, supersaw, superpwm, supercomparator

-- DIGITAL SYNTH
-- superchip, supernoise

d1 $ whenmod 8 6 ((#n "-10").(striate' 4 (1/8))) $ s "supersaw*8" # n (-20) + (irand 10)
d1 $ n "<[a5,cs5,e5,g5]*3 [d5,fs5,g5,c5]>" # s "supermandolin" # gain "1"

d1 $ jux (# accelerate "-0.1") $ s "supermandolin*8" # midinote "[80!6 78]/8"
  # sustain "1 0.25 2 1"

d1 $ midinote (slow 2 $ (run 8) * (7) + 50) # s "superpiano" # decay "[1 0.2]/8"
  # voice "[0.5 0]/8" # sustain (slow 20 $ range 16 8.5 $ saw) # release "22"


let pat1 = "a0 c e g g2" 

d1 $ stack [
    midinote (slow 2 $ (run pat1) * (7) + 50) # s "superpiano" # decay "[1 0.2]/8"
  # voice "[0.5 0]/8" # sustain (slow 20 $ range 16 8.5 $ saw) # release "22"
  ,whenmod 4 2 (jux(rev)) $ s "super808 superclap ~ superkick*2" # gain "1.2" # sustain "4" 
]

setcps(1)
d1 $ s "{auto:3(4,4) auto:4(2,4)}"